/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package Movie_Management_System;

import java.awt.*;
import java.sql.*;
import java.sql.SQLException;


import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.Iterator;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

public class App {
    public Connection conn;
    public boolean connect() {
        try {
            String url = "";
            if (System.getenv("MOVIE_ENV").equals("production")) {
                url = "jdbc:sqlite:src/main/database/system.db";
            }

            if (System.getenv("MOVIE_ENV").equals("test"))  {
                url = "jdbc:sqlite:src/main/database/test.db";
            }
            // create a connection to the database
            Class.forName("org.sqlite.JDBC");
            conn = DriverManager.getConnection(url);
            Statement stmt = conn.createStatement();
//            String movie_1 = "INSERT INTO Movie VALUES (5, 'Toy Story', 'A story about toys.', 'G', '1995', 'John Lasseter', 'Woody and Buzz');";
//            stmt.executeUpdate(movie_1);

            // String session_1 = "INSERT INTO Session VALUES (1, 1, 'Burwood', 'Gold', '2021-11-15 08:00:00', 500, 100);";
            // String session_1 = "INSERT INTO Session VALUES (2, 1, 'Broadway', 'Silver', '2021-12-15 16:00:00', 1000, 500);";
            // String session_1 = "INSERT INTO Cinema VALUES ('Burwood')";
            // String session_2 = "INSERT INTO Cinema VALUES ('Broadway')";

            // stmt.executeUpdate(session_1);
            // stmt.executeUpdate(session_2);
            System.out.println("Connection to SQLite has been established.");
            return true;

        } catch (SQLException | ClassNotFoundException e) {
            e.printStackTrace();
            return false;
        }
    }

    public void closeConnection() {
        try {
            if (conn != null) {
                conn.close();
            }
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
    }
    public void parse_card_info(){
        int status = 0;
        try {
            // PreparedStatements 
            //number, name
            PreparedStatement preparedStatement = conn.prepareStatement("insert into Card values (?, ?)");
            JSONParser parser=new JSONParser();
            Object obj = parser.parse(new FileReader("credit_cards.json"));
            JSONArray array = (JSONArray) obj;

            for (int i = 0; i < array.size(); i++){
                JSONObject objects = (JSONObject) array.get(i);
                String number = (String) objects.get("number");
                String name = (String) objects.get("name");
                preparedStatement.setString(1, number);
                preparedStatement.setString(2, name);
                status = preparedStatement.executeUpdate();
                if (status == 0){
                    System.out.println("Error.");
                    break;
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static void main(String[] args) {
        App app = new App();
        app.connect();
        Adminbe abe = new Adminbe(app.conn);
        Customerbe cbe = new Customerbe(app.conn);
        abe.executeSQLUpdate("PRAGMA foreign_keys=ON");
        HomePage hp = new HomePage(abe, cbe);
        hp.guest_mode();
    }
}
